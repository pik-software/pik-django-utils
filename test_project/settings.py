"""
Django settings for empty project.

Generated by 'django-admin startproject' using Django 1.11.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from unittest.mock import patch

import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

REDIS_URL = 'redis://@127.0.0.1:6379'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+!1n5nglwv!@i^od9f9+srz$0*u_*(k0k)ann3@3uc$f#1*b6i'  # noqa: dodgy - secret

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',

    'pik.cors',
    'pik.bus',
    'test_core_models',
    'test_core_models_fields',
    'test_core_shortcuts',
    'test_bus',
]

MIDDLEWARE = [
    'pik.cors.middleware.CachedCorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'test_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

BASE_DIR_NAME = os.path.basename(BASE_DIR)
SERVICE_NAME = os.environ.get('SERVICE_NAME', BASE_DIR_NAME)
# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASE_URL = os.environ.get(
    'DATABASE_URL',
    'postgres://@127.0.0.1:5432/' + SERVICE_NAME)

DATABASES = {
    'default': dj_database_url.parse(
        DATABASE_URL,
        engine='django.contrib.gis.db.backends.postgis'
    )
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_URL,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'


# SOFT DELETE
# when SOFT_DELETE_SAFE_MODE is True - not soft deletion restricted
SOFT_DELETE_SAFE_MODE = True
SOFT_DELETE_EXCLUDE = [
    'sessions.Session',
    'bus.PIKMessageException'
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),
    'EXCEPTION_HANDLER': 'pik.api.exception_handler.standardized_handler',
}

HISTORY_SERIALIZER_CACHE_TTL_SEC = int(os.environ.get(
    'HISTORY_SERIALIZER_CACHE_TTL_SEC', 24 * 3600))

ONLY_LAST_VERSION_ALLOWED_DAYS_RANGE = os.environ.get(
    'ONLY_LAST_VERSION_ALLOWED_DAYS_RANGE', 1)


OIDC_DEFAULT_BACKEND = 'pik'
from pik.oidc.settings import set_oidc_settings  # noqa: pylint=wrong-import-position
set_oidc_settings(globals())


# # Stub for rabbitMQ settings
RABBITMQ_PRODUCER_ENABLE = False
RABBITMQ_CONSUMER_ENABLE = False
RABBITMQ_URL = ''
RABBITMQ_PRODUCES = {}
RABBITMQ_CONSUMES = {}
RABBITMQ_RESPONSER_ENABLE = True
"""
Example of RABBITMQ_RESPONSES:
RABBITMQ_RESPONSES = {
    'module.RequestCommandSerializer': (
        'module.ResponseCommandSerializer',
        'module.exec_command_function')}
"""
# Responses for commands should not be defined in RABBITMQ_PRODUCES,
# because exchange are defined automatically with addition '.routed' suffix.
# TODO: move this comment to documentation for commands.
RABBITMQ_RESPONSES = {}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'


# Mock decorator for pik.bus.consumer.MessageHandler before load him from
# tasks.py. Do here because tasks.py is loaded before conftest.py.
patch('pik.utils.decorators.close_old_db_connections', lambda x: x).start()


DRFSO2_URL_NAMESPACE = 'auth-api'


try:
    from .settings_local import *  # noqa: pylint=unused-wildcard-import, pylint=wildcard-import
except ImportError:
    pass
